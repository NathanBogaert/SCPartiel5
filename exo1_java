import java.util.List;

public class DeliveryService {
    private PricingStrategy pricingStrategy;

    public DeliveryService(PricingStrategy pricingStrategy) {
        this.pricingStrategy = pricingStrategy;
    }

    public double calculateDeliveryPrice(List<Package> packages, String customerType, boolean urgent) {
        return pricingStrategy.calculatePrice(packages, customerType, urgent);
    }

    public void printInvoice(List<Package> packages, String customerType) {
        double price = calculateDeliveryPrice(packages, customerType, false);
        System.out.println("Total: " + price);

        if (price > 100) {
            System.out.println("Apply special discount next time!");
        }
    }
}

interface PricingStrategy {
    double calculatePrice(List<Package> packages, String customerType, boolean urgent);
}

class DefaultPricingStrategy implements PricingStrategy {
    @Override
    public double calculatePrice(List<Package> packages, String customerType, boolean urgent) {
        double total = 0;

        for (Package pkg : packages) {
            if (pkg.getWeight() < 0) {
                System.out.println("Invalid weight!");
                return -1;
            }

            double base = pkg.getDistance() * 0.1;

            base += WeightPricingStrategy.calculate(pkg.getWeight());
            base = UrgencyPricingStrategy.calculate(base, urgent);
            base = CustomerTypePricingStrategy.calculate(base, customerType);

            total += base;
        }

        if (packages.size() > 3) {
            total *= 0.95;
        }

        return total;
    }
}

class WeightPricingStrategy {
    static double calculate(double weight) {
        if (weight > 10) {
            return 5;
        } else if (weight > 5) {
            return 3;
        }
        return 0;
    }
}

class UrgencyPricingStrategy {
    static double calculate(double base, boolean urgent) {
        if (urgent) {
            return base * 1.5;
        }
        return base;
    }
}

class CustomerTypePricingStrategy {
    static double calculate(double base, String customerType) {
        if (customerType.equals("VIP")) {
            return base * 0.8;
        } else if (customerType.equals("Business")) {
            return base * 0.9;
        }
        return base;
    }
}

class Package {
    private double weight;
    private double distance;

    public Package(double weight, double distance) {
        this.weight = weight;
        this.distance = distance;
    }

    public double getWeight() {
        return weight;
    }

    public double getDistance() {
        return distance;
    }
}